{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "315090b4",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "    Game Introduction\n",
      "\n",
      "    The purpose of this code is to create a game where a rabbit must find a carrot.\n",
      "    There are 3 stages which the rabbit must go through in order to obtain the carrot: \n",
      "    \n",
      "        Stage1) Across the river\n",
      "        Stage2) Into the field \n",
      "        Stage3) through the maze\n",
      "        \n",
      "    There are two results from the user's choice at each stage of the game: fail or win. \n",
      "    The fail or win result is resulted from the user's input.\n",
      "    \n",
      "    Source: 3 Rabbits (TV Series in Malysia)\n",
      "You must cross the river. Do you choose to swim or take the bridge?\n",
      "\n",
      "Please answer by writing \"swim\" or \"bridge\", then hit enter.\n",
      "bridge\n",
      "Perfect! Your choice has advanced you to the next stage.\n",
      "Your goal is to make it through the field as quick as possible. Do you run straight across or diagonally?\n",
      "\n",
      "Please answer by writing \"straight\" or \"diagonal\", then hit enter.\n",
      "diagoNaL\n",
      "Awesome choice, you will make it to the next stage.\n",
      "You're in a corn maze and must choose to go using the left or right path. Which path do you choose?\n",
      "\n",
      "Please answer by writing \"left\" or \"right\", then hit enter.\n",
      "LEft\n",
      "Woohoo! You have passed all three stages and are awarded a carrot.\n",
      "\n",
      "You win.\n"
     ]
    }
   ],
   "source": [
    "#Docstring and Introduction to the Game\n",
    "\n",
    "#Defining a function named my_DocstringFunction\n",
    "\n",
    "def my_DocstringFunction():\n",
    "    '''\n",
    "    Game Introduction\n",
    "\n",
    "    The purpose of this code is to create a game where a rabbit must find a carrot.\n",
    "    There are 3 stages which the rabbit must go through in order to obtain the carrot: \n",
    "    \n",
    "        Stage1) Across the river\n",
    "        Stage2) Into the field \n",
    "        Stage3) through the maze\n",
    "        \n",
    "    There are two results from the user's choice at each stage of the game: fail or win. \n",
    "    The fail or win result is resulted from the user's input.\n",
    "    \n",
    "    Source: 3 Rabbits (TV Series in Malysia)'''\n",
    "   \n",
    "    return None\n",
    "\n",
    "#Printing my_DocstringFunction  \n",
    "\n",
    "    print(my_DocstringFunction.__doc__)\n",
    "  \n",
    "  \n",
    "\n",
    "#########################################################\n",
    "# Creating a river for first stage of game\n",
    "#########################################################\n",
    "\n",
    "#Defining a function named stage1_river\n",
    "def stage1_river():\n",
    "    print(\"You must cross the river. Do you choose to swim or take the bridge?\\n\")\n",
    "    \n",
    "    command = True \n",
    "    \n",
    "    while(command): #Adding a loop to execute the statement if command is true or false\n",
    "        \n",
    "#Getting the user input        \n",
    "        user_input = input(prompt = 'Please answer by writing \"swim\" or \"bridge\", then hit enter.\\n') \n",
    "\n",
    "#adding a condition (.lower avoids case sensitivity in the user input)\n",
    "        if user_input.lower() == 'swim':\n",
    "            print(\"Oops! You have drowned because rabbits can't swim.\")\n",
    "            command = False\n",
    "            lose()\n",
    "\n",
    "#continuing the condition\n",
    "        elif user_input.lower() == 'bridge':\n",
    "            print(\"Perfect! Your choice has advanced you to the next stage.\")\n",
    "            command = False\n",
    "            stage2_field()\n",
    "            \n",
    "#ending the condition       \n",
    "        else: command =True\n",
    "\n",
    "\n",
    "\n",
    "#########################################################\n",
    "# Adding field and linking it to river\n",
    "#########################################################\n",
    "\n",
    "\n",
    "#Defining a function named stage2_field\n",
    "def stage2_field():\n",
    "    print(\"Your goal is to make it through the field as quick as possible. Do you run straight across or diagonally?\\n\")   \n",
    "    \n",
    "    command = True\n",
    "    \n",
    "    while(command): #Adding a loop to execute the statement if command is true or false\n",
    "        \n",
    "#Getting the user input                \n",
    "        user_input = input(prompt = 'Please answer by writing \"straight\" or \"diagonal\", then hit enter.\\n') \n",
    "\n",
    "#adding a condition (.lower avoids case sensitivity in the user input)\n",
    "        if user_input.lower() == 'straight':\n",
    "            print(\"Sorry, but this option is slower than the running diagonally.\")\n",
    "            command = False\n",
    "            lose()\n",
    "            \n",
    "#continuing the condition            \n",
    "        elif user_input.lower() == 'diagonal':\n",
    "            print(\"Awesome choice, you will make it to the next stage.\")\n",
    "            command = False\n",
    "            stage3_maze()\n",
    "            \n",
    "        \n",
    "#ending the condition                   \n",
    "        else: command = True    \n",
    "\n",
    "\n",
    "#########################################################\n",
    "# Adding maze and linking it to field\n",
    "#########################################################\n",
    "\n",
    "#Defining a function named stage3_maze\n",
    "def stage3_maze():    \n",
    "    print(\"You're in a corn maze and must choose to go using the left or right path. Which path do you choose?\\n\")    \n",
    "    \n",
    "    command = True\n",
    "    while(command):  #Adding a loop to execute the statement if command is true or false\n",
    "        \n",
    "#Getting the user input        \n",
    "        user_input = input(prompt = 'Please answer by writing \"left\" or \"right\", then hit enter.\\n')\n",
    "        \n",
    "#adding a condition (.lower avoids case sensitivity in the user input)\n",
    "        if user_input.lower() == 'right':\n",
    "            print(\"Oh no, this path has lead you the edge of a cliff. You did not get a carrot.\")\n",
    "            command = False\n",
    "            lose()\n",
    "            \n",
    "#continuing the condition        \n",
    "        elif user_input.lower() == 'left':\n",
    "            print(\"Woohoo! You have passed all three stages and are awarded a carrot.\\n\")\n",
    "            command = False\n",
    "            win()\n",
    "            \n",
    "#ending the condition                               \n",
    "        else: command = True    \n",
    "\n",
    "#Defining the win function (results in a \"win\" scenario)\n",
    "def win():\n",
    "    print(\"You win.\")\n",
    "\n",
    "#Defining the lose function (results in a \"fail\" scenario)\n",
    "def lose():\n",
    "    print(\"You lose.\")\n",
    "\n",
    "#calling the stage1_river function    \n",
    "stage1_river()\n",
    "\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "b6485424",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
